/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createExerciseTemplateFromDiscriminatorValue, serializeExerciseTemplate, type ExerciseTemplate } from '../../models/index.js';
// @ts-ignore
import { type WithExerciseTemplateItemRequestBuilder, WithExerciseTemplateItemRequestBuilderRequestsMetadata } from './item/index.js';
// @ts-ignore
import { type AdditionalDataHolder, type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Exercise_templatesGetResponse}
 */
// @ts-ignore
export function createExercise_templatesGetResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoExercise_templatesGetResponse;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoExercise_templatesGetResponse(exercise_templatesGetResponse: Partial<Exercise_templatesGetResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "exercise_templates": n => { exercise_templatesGetResponse.exerciseTemplates = n.getCollectionOfObjectValues<ExerciseTemplate>(createExerciseTemplateFromDiscriminatorValue); },
        "page": n => { exercise_templatesGetResponse.page = n.getNumberValue(); },
        "page_count": n => { exercise_templatesGetResponse.pageCount = n.getNumberValue(); },
    }
}
export interface Exercise_templatesGetResponse extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The exercise_templates property
     */
    exerciseTemplates?: ExerciseTemplate[] | null;
    /**
     * Current page number
     */
    page?: number | null;
    /**
     * Total number of pages
     */
    pageCount?: number | null;
}
/**
 * Builds and executes requests for operations under /v1/exercise_templates
 */
export interface Exercise_templatesRequestBuilder extends BaseRequestBuilder<Exercise_templatesRequestBuilder> {
    /**
     * Gets an item from the ApiSdk.v1.exercise_templates.item collection
     * @param exerciseTemplateId The id of the exercise template
     * @returns {WithExerciseTemplateItemRequestBuilder}
     */
     byExerciseTemplateId(exerciseTemplateId: string) : WithExerciseTemplateItemRequestBuilder;
    /**
     * Get a paginated list of exercise templates available on the account.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<Exercise_templatesGetResponse>}
     */
     get(requestConfiguration?: RequestConfiguration<Exercise_templatesRequestBuilderGetQueryParameters> | undefined) : Promise<Exercise_templatesGetResponse | undefined>;
    /**
     * Get a paginated list of exercise templates available on the account.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<Exercise_templatesRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * Get a paginated list of exercise templates available on the account.
 */
export interface Exercise_templatesRequestBuilderGetQueryParameters {
    /**
     * Page number (Must be 1 or greater)
     */
    page?: number;
    /**
     * Number of items on the requested page (Max 100)
     */
    pageSize?: number;
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeExercise_templatesGetResponse(writer: SerializationWriter, exercise_templatesGetResponse: Partial<Exercise_templatesGetResponse> | undefined | null = {}) : void {
    if (exercise_templatesGetResponse) {
        writer.writeCollectionOfObjectValues<ExerciseTemplate>("exercise_templates", exercise_templatesGetResponse.exerciseTemplates, serializeExerciseTemplate);
        writer.writeNumberValue("page", exercise_templatesGetResponse.page);
        writer.writeNumberValue("page_count", exercise_templatesGetResponse.pageCount);
        writer.writeAdditionalData(exercise_templatesGetResponse.additionalData);
    }
}
/**
 * Uri template for the request builder.
 */
export const Exercise_templatesRequestBuilderUriTemplate = "{+baseurl}/v1/exercise_templates{?page*,pageSize*}";
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const Exercise_templatesRequestBuilderNavigationMetadata: Record<Exclude<keyof Exercise_templatesRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byExerciseTemplateId: {
        requestsMetadata: WithExerciseTemplateItemRequestBuilderRequestsMetadata,
        pathParametersMappings: ["exerciseTemplateId"],
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const Exercise_templatesRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: Exercise_templatesRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        adapterMethodName: "send",
        responseBodyFactory:  createExercise_templatesGetResponseFromDiscriminatorValue,
    },
};
/* tslint:enable */
/* eslint-enable */
